<?xml version="1.0" encoding="UTF-8"?>
<data>
    <time-management>
        <final-time>2.7e-06</final-time>
        <initial-time-step>5e-11</initial-time-step>
        <constant-time-step>True</constant-time-step>
        <time-step-reduction-factor-for-failure>1</time-step-reduction-factor-for-failure> <!-- facteur pour diviser le pas de temps aprÃ¨s rupture-->
    </time-management>

    <geometry>
        <section>0.000003141592653589793</section>
    </geometry>

    <matter>
        <initialization>
            <initial-velocity>0.</initial-velocity>
            <init-thermo>Tantale_InitThermo.json</init-thermo>
        </initialization>
        <equation-of-state>
            <name>Mie-Gruneisen</name>
            <coefficients>Tantale_MieGruneisen.json</coefficients>
        </equation-of-state>
    </matter>

    <boundary-conditions>
        <left-boundary>
            <type>pressure</type>  <!-- pressure || velocity-->
            <bc-law>constant</bc-law> <!-- constant (1 arg float : value) || TwoSteps (3 arg float : value1, value2, time-activation)
             || MarchTablePressure (1 arg str : value (nom du fichier)) || Ramp (4 arg float value1, value2, time-activation1, time-activation2)
             || CreneauRamp (7 arg float : initial-value, plateau-value, end-value, start-first-ramp-time, reach-value2-time, start-second-ramp-time, reach-value3-time)  -->
            <value>-10.e+09</value>
        </left-boundary>
        <right-boundary>
            <type>pressure</type>  <!-- pressure || velocity-->
            <bc-law>constant</bc-law> <!-- constant (1 arg float : value) || TwoSteps (3 arg float : value1, value2, time-activation)
             || MarchTablePressure (1 arg str : value (nom du fichier)) || Ramp (4 arg float value1, value2, time-activation1, time-activation2)
             || CreneauRamp (7 arg float : initial-value, plateau-value, end-value, start-first-ramp-time, reach-value2-time, start-second-ramp-time, reach-value3-time)  -->
            <value>0.</value>
        </right-boundary>
    </boundary-conditions>

    <numeric-parameters>
        <linear-pseudo>0.2</linear-pseudo>
        <quadratic-pseudo>2.</quadratic-pseudo>
        <cfl>0.34</cfl>
        <cfl-pseudo>0.</cfl-pseudo>
    </numeric-parameters>

    <output>
        <number-of-images>500</number-of-images>
        <dump-images>false</dump-images> <!-- bool = "true" to save images, else "false" -->
        <database>
            <identifier>AllFieldsDb</identifier>
            <path>all_fields.hdf5</path>
            <iteration-period>10</iteration-period>
        </database>
    </output>
</data>
