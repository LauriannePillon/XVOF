<?xml version="1.0" encoding="UTF-8"?>
<data>
    <time-management>
        <final-time>5e-06</final-time>
        <initial-time-step>0.5e-09</initial-time-step>
        <constant-time-step>True</constant-time-step>
        <time-step-reduction-factor-for-failure>1</time-step-reduction-factor-for-failure> <!-- facteur pour diviser le pas de temps après rupture-->
    </time-management>

    <geometry>
        <section>0.000003141592653589793</section>
        <initial-interface-position>3.5e-03</initial-interface-position>
    </geometry>

    <matter>
        <projectile>
            <initialization>
                <initial-velocity>654.</initial-velocity>
                <init-thermo>Aluminium_InitThermo.json</init-thermo>
            </initialization>
            <equation-of-state>
                <name>Mie-Gruneisen</name>
                <coefficients>Aluminium_MieGruneisen.json</coefficients>
            </equation-of-state>
            <rheology>
                <coefficients>Aluminium_EPP.json</coefficients>
                <elasticity-model>Linear</elasticity-model>
                <plasticity-criterion>VonMises</plasticity-criterion>
                <plasticity-model>EPP</plasticity-model>
            </rheology>
        </projectile>

        <target>
            <initialization>
                <initial-velocity>0.</initial-velocity>
                <init-thermo>Tantale_InitThermo.json</init-thermo>
            </initialization>
            <equation-of-state>
                <name>Mie-Gruneisen</name>
                <coefficients>Tantale_MieGruneisen.json</coefficients>
            </equation-of-state>
            <rheology>
                <coefficients>Tantale_EPP.json</coefficients>
                <elasticity-model>Linear</elasticity-model>
                <plasticity-criterion>VonMises</plasticity-criterion>
                <plasticity-model>EPP</plasticity-model>
            </rheology>
            <failure>
                <failure-criterion>
                    <name>MaximalStress</name> <!-- MinimumPressure, HalfrodComparison, Damage, MaximalStress -->
                    <value>9.e+09</value>
                </failure-criterion>
                <failure-treatment>
                    <name>Enrichment</name> <!-- ImposedPressure || Enrichment-->
                    <value>0.5</value>
                    <type-of-enrichment>Hansbo</type-of-enrichment> <!-- Hansbo -->
                    <lump-mass-matrix>somme</lump-mass-matrix>  <!-- none || somme || menouillard -->
                </failure-treatment>
                <damage-treatment>
                    <cohesive-model>
                        <name>linear</name> <!-- linear || bilinear || trilinear -->
                        <coefficients>
                            <cohesive-strength>2.e+09</cohesive-strength>
                            <critical-separation>1.e-4</critical-separation>
                            <separation-at-point-1>1.e-5</separation-at-point-1>  <!-- 1er rupture de pente dans la loi cohésive si loi bilineaire-->
                            <contrainte-at-point-1>1.e+09</contrainte-at-point-1>
                            <separation-at-point-2>2.e-5</separation-at-point-2>  <!-- 2eme rupture de pente dans la loi cohésive si loi trilineaire-->
                            <contrainte-at-point-2>1.e+09</contrainte-at-point-2>
                        </coefficients>
                        <unloading-model>
                            <name>progressiveunloading</name> <!--zeroforceunloading || progressiveunloading || lossofstiffnessunloading-->
                            <slope>1.e+16</slope>
                        </unloading-model>
                    </cohesive-model>
                </damage-treatment>
            </failure>
        </target>
    </matter>

    <boundary-conditions>
        <left-boundary>
            <type>pressure</type>  <!-- pressure || velocity-->
            <bc-law>constant</bc-law> <!-- constant (1 arg float : value) || TwoSteps (3 arg float : value1, value2, time-activation)
             || MarchTablePressure (1 arg str : value (nom du fichier)) || Ramp (4 arg float value1, value2, time-activation1, time-activation2)
             || CreneauRamp (7 arg float : initial-value, plateau-value, end-value, start-first-ramp-time, reach-value2-time, start-second-ramp-time, reach-value3-time)  -->
            <value>0.</value>
        </left-boundary>
        <right-boundary>
            <type>pressure</type>  <!-- pressure || velocity-->
            <bc-law>constant</bc-law> <!-- constant (1 arg float : value) || TwoSteps (3 arg float : value1, value2, time-activation)
             || MarchTablePressure (1 arg str : value (nom du fichier)) || Ramp (4 arg float value1, value2, time-activation1, time-activation2)
             || CreneauRamp (7 arg float : initial-value, plateau-value, end-value, start-first-ramp-time, reach-value2-time, start-second-ramp-time, reach-value3-time)  -->
            <value>0.</value>
        </right-boundary>
    </boundary-conditions>

    <numeric-parameters>
        <linear-pseudo>0.2</linear-pseudo>
        <quadratic-pseudo>2.</quadratic-pseudo>
        <cfl>0.34</cfl>
        <cfl-pseudo>0.</cfl-pseudo>
        <external-solver-library>vnr_internal_energy_evolution.so</external-solver-library>
    </numeric-parameters>

    <output>
        <number-of-images>500</number-of-images>
        <dump-images>false</dump-images> <!-- bool = "true" to save images, else "false" -->
        <database>
            <identifier>AllFieldsDb</identifier>
            <path>all_fields.hdf5</path>
            <iteration-period>20</iteration-period>
        </database>
    </output>
</data>
